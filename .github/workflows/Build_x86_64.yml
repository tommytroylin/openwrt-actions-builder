name: Build_x86_64

on:
  schedule:
    - cron: '0 0 * * 5'

  push:
    branches:
      - master

  watch:
    types: [started]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Initialize Environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q` > /dev/null
          sudo -E apt-get -y purge ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* adoptopenjdk* mysql* php* mongodb* moby* snapd* > /dev/null
          echo "======== Packages Cleanup Finished ========"
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /usr/local/lib/android /opt/ghc > /dev/null
          echo "======== Release Disk Space Finished ========"
          sudo -E apt-get update > /dev/null
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 python2.7 unzip zlib1g-dev lib32gcc-s1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget curl swig rsync > /dev/null
          sudo -E apt-get -y autoremove --purge > /dev/null
          sudo -E apt-get clean > /dev/null
          echo "======== Install Build Tools Finished ========"
          df -h

      - name: Clone Source Code
        uses: actions/checkout@master
        with:
          repository: coolsnowwolf/lede
          path: openwrt

      - name: Update & Install Feeds
        working-directory: ./openwrt
        run: |
          echo "src-git small8 https://github.com/kenzok8/small-package" >> ./feeds.conf.default
          chmod +x ./scripts/*
          ./scripts/feeds update -a > /dev/null
          ./scripts/feeds install -a > /dev/null

      - name: Configuration Customization - Build_x86_64
        env:
          CONFIG_FILE: 'x86_64.config'
        run: |
          [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
          cd openwrt && make defconfig > /dev/null
          echo "======== Config Set ========"

      - name: Download Packages
        working-directory: ./openwrt
        run: |
          make download -j$(nproc) > /dev/null
          echo "======== Download Packages Finished ========"
          find dl -size -1024c -exec ls -l {} \;
          find dl -size -1024c -exec rm -f {} \;
          df -h

      - name: Build Firmware
        working-directory: ./openwrt
        run: |
          echo -e "$(nproc) thread build."
          make -j$(nproc) V=s &>info.log || { echo "======== Last 200 Lines Of Build Log ========"; cat info.log | tail -n 200; exit 1; }

      - name: Upload Artifact
        uses: actions/upload-artifact@master
        with:
          name: OpenWrt
          path: openwrt/bin

      - name: Delete Workflow Runs
        uses: GitRML/delete-workflow-runs@main
        with:
          retain_days: 1
          keep_minimum_runs: 3
